<?php

/**
 * This file is part of the Sandbox/Application component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Sandbox\Security\Application\Tests\Units\User\Service;

use Cubiche\Domain\Web\EmailAddress;
use Sandbox\Security\Application\Tests\Units\TestCase;
use Sandbox\Security\Application\Tests\Units\User\SettingSecurityContextTrait;
use Sandbox\Security\Domain\User\UserId;

/**
 * SecurityContextTests class.
 *
 * Generated by TestGenerator on 2018-04-03 at 17:28:01.
 */
class SecurityContextTests extends TestCase
{
    use SettingSecurityContextTrait;

    /**
     * Test JWT property.
     */
    public function testJWT()
    {
        $this
            ->given($securityContext = $this->getSecurityContext())
            ->then()
                ->string($securityContext->getJWT())
                    ->isNotEmpty()
        ;

        $this
            ->given($securityContext = $this->getEmptySecurityContext())
            ->then()
                ->variable($securityContext->getJWT())
                    ->isNull()
        ;
    }

    /**
     * Test userId method.
     */
    public function testUserId()
    {
        $this
            ->given($securityContext = $this->getSecurityContext())
            ->then()
                ->object($securityContext->userId())
                    ->isInstanceOf(UserId::class)
        ;

        $this
            ->given($securityContext = $this->getEmptySecurityContext())
            ->then()
                ->variable($securityContext->userId())
                    ->isNull()
        ;
    }

    /**
     * Test userEmail method.
     */
    public function testUserEmail()
    {
        $this
            ->given($securityContext = $this->getSecurityContext())
            ->then()
                ->object($securityContext->userEmail())
                    ->isInstanceOf(EmailAddress::class)
        ;

        $this
            ->given($securityContext = $this->getEmptySecurityContext())
            ->then()
                ->variable($securityContext->userEmail())
                    ->isNull()
        ;
    }

    /**
     * Test IsAuthenticated method.
     */
    public function testIsAuthenticated()
    {
        $this
            ->given($securityContext = $this->getSecurityContext())
            ->then()
                ->boolean($securityContext->isAuthenticated())
                    ->isTrue()
        ;

        $this
            ->given($securityContext = $this->getEmptySecurityContext())
            ->then()
                ->boolean($securityContext->isAuthenticated())
                    ->isFalse()
        ;
    }
}
