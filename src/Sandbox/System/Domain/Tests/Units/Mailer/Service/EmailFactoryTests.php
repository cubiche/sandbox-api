<?php

/**
 * This file is part of the Sandbox application.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Sandbox\System\Domain\Tests\Units\Mailer\Service;

use Sandbox\System\Domain\Mailer\Email;
use Sandbox\System\Domain\Mailer\Service\EmailFactory;
use Sandbox\System\Domain\Tests\Units\TestCase;

/**
 * EmailFactoryTests class.
 *
 * Generated by TestGenerator on 2018-02-15 at 10:51:52.
 */
class EmailFactoryTests extends TestCase
{
    /**
     * @return EmailFactory()
     */
    public function createFactory()
    {
        return new EmailFactory();
    }

    /**
     * Test Create method.
     */
    public function testCreate()
    {
        $this
            ->given($factory = $this->createFactory())
            ->and($code = $this->faker->uuid)
            ->and($senderName = $this->faker->company)
            ->and($senderAddress = $this->faker->email)
            ->and($subject = $this->faker->sentence())
            ->and($content = $this->faker->paragraph())
            ->and($template = $this->faker->domainWord)
            ->when($email = $factory->create($code, $senderName, $senderAddress, $subject, $content, $template))
            ->then()
                ->object($email)
                    ->isInstanceOf(Email::class)
                ->string($email->code()->toNative())
                    ->isEqualTo($code)
                ->string($email->senderName()->toNative())
                    ->isEqualTo($senderName)
                ->string($email->senderAddress()->toNative())
                    ->isEqualTo($senderAddress)
                ->string($email->subject()->toNative())
                    ->isEqualTo($subject)
                ->string($email->content()->toNative())
                    ->isEqualTo($content)
                ->string($email->template()->toNative())
                    ->isEqualTo($template)
        ;
    }
}
