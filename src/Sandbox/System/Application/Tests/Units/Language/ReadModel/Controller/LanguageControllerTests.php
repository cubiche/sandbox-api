<?php

/**
 * This file is part of the Sandbox/Application component.
 *
 * Copyright (c) Cubiche
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Sandbox\System\Application\Tests\Units\Language\ReadModel\Controller;

use Sandbox\Core\Application\Tests\Units\SettingTokenContextTrait;
use Sandbox\System\Application\Language\ReadModel\Controller\LanguageController;
use Sandbox\System\Application\Tests\Units\TestCase;
use Sandbox\System\Domain\Language\LanguageId;
use Sandbox\System\Domain\Language\ReadModel\Language;
use Cubiche\Domain\Locale\LanguageCode;
use Cubiche\Domain\Locale\LocaleCode;
use Cubiche\Domain\Localizable\LocalizableString;

/**
 * LanguageControllerTests class.
 *
 * Generated by TestGenerator on 2018-01-25 at 19:27:41.
 */
class LanguageControllerTests extends TestCase
{
    use SettingTokenContextTrait;

    /**
     * @return LanguageController
     */
    protected function createController()
    {
        return new LanguageController($this->queryBus(), $this->getTokenContext());
    }

    /**
     * Test FindOneByCodeAction method.
     */
    public function testFindOneByCodeAction()
    {
        $this
            ->given($controller = $this->createController())
            ->and($languageCode = LanguageCode::EN)
            ->and($repository = $this->queryRepository(Language::class))
            ->when($language = $controller->findOneByCodeAction($languageCode))
            ->then()
                ->variable($language)
                    ->isNull()
                ->and()
                ->when(
                    $repository->persist(
                        new Language(
                            LanguageId::next(),
                            LocalizableString::fromArray(array('en_US' => 'English', 'es_ES' => 'Ingles')),
                            LanguageCode::EN()
                        )
                    )
                )
                ->then()
                    ->variable($language = $controller->findOneByCodeAction($languageCode))
                        ->isNotNull()
                    ->string($language->name()->translate(LocaleCode::EN_US()))
                        ->isEqualTo('English')
        ;
    }

    /**
     * Test findAllAction method.
     */
    public function testFindAllAction()
    {
        $this
            ->given($controller = $this->createController())
            ->and($repository = $this->queryRepository(Language::class))
            ->then()
                ->array(iterator_to_array($controller->findAllAction()))
                    ->isEmpty()
                ->and()
                ->when(
                    $repository->persist(
                        new Language(
                            LanguageId::next(),
                            LocalizableString::fromArray(array('en_US' => 'English', 'es_ES' => 'Ingles')),
                            LanguageCode::EN()
                        )
                    )
                )
                ->and(
                    $repository->persist(
                        new Language(
                            LanguageId::next(),
                            LocalizableString::fromArray(array('en_US' => 'Spanish', 'es_ES' => 'EspaÃ±ol')),
                            LanguageCode::ES()
                        )
                    )
                )
                ->then()
                    ->array(iterator_to_array($controller->findAllAction()))
                        ->isNotEmpty()
                        ->hasSize(2)
        ;
    }
}
